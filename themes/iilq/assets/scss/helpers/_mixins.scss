/*=================================
=            Animation            =
=================================*/

@mixin animate-fade {
	transition:.25s ease-in-out;
}

@mixin slow-fade {
    transition:.1s ease-in-out;
}

/*=====  End of Animation  ======*/

/*=============================
=            Fonts            =
=============================*/

@mixin font-face($font-name, $file-name, $weight: normal, $style: normal) { 
  @font-face {
    font-family: quote($font-name);
    src: url($file-name + '.eot');
    src: url($file-name + '.eot?#iefix')  format('embedded-opentype'),
         url($file-name + '.woff') format('woff'),
         url($file-name + '.ttf')  format('truetype'),
         url($file-name + '.svg##{$font-name}')  format('svg');
    font-weight: $weight;
    font-style: $style;
  }
 }

/*=====  End of Fonts  ======*/

/*==============================
=            Extend            =
==============================*/

.content-box-ext {
    height: 100%;
    width: 25%;
    position: relative;
    text-align: center;
    @include animate-fade;    
    @include breakpoint(tablet) {
        width: 50%;
    }
    @include breakpoint(phone) {
        width: 50%;
    }
}

.link-box-ext {
    height: 100%;
    width: 25%;
    position: relative;
    @include animate-fade;    
    @include breakpoint(tablet) {
        width: 50%;
    }
    @include breakpoint(phone) {
        width: 50%;
    }
}

.image-box-ext {
    width: 50%;
    height: 100%;
    overflow: hidden;
    @include breakpoint(tablet) {
        width: 100%;
        height: 250px;
    }
    @include breakpoint(phone) {
        width: 100%;
        height: 200px;
    }
    img {
        height: 100%;
        object-fit: cover;
        width: 100%;
    }    
}

/*=====  End of Extend  ======*/



/*=====================================
=            Custom Mixins            =
=====================================*/

@mixin centered-heading {
    @include centre(both);
    width: 80%;
    font-family: $font-heading;
    font-size: 1.8em;
    line-height: 1.3;
    letter-spacing: 4px;    
    @include breakpoint(phone) {
        font-size: 1.4em;
        letter-spacing: 3px;
        width: 90%;
    }
}

@mixin push-auto {
    margin: { 
        left: auto;
        right: auto;
    }
}

@function z($name) {
    @if index($z-indexes, $name) {
        @return (length($z-indexes) - index($z-indexes, $name)) + 1;
    } @else {
        @warn 'There is no item "#{$name}" in this list; choose one of: #{$z-indexes}';
        @return null;
    }
}
$z-indexes: (
    "outdated-browser",
    "modal",
    "site-header",
    "page-wrapper",
    "site-footer"
);

.dark-overlay {
    position: absolute;
    top:0px;
    left:0px;
    width: 100%;
    height: 100%;
    background:rgba(0,0,0,0.3);
    @include animate-fade;
}

@mixin font-ico {
    display: inline-block;
    font: normal normal normal 14px/1 FontAwesome;
    font-size: inherit;
    text-rendering: auto;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    transform: translate(0, 0);
    position: absolute;
}

@mixin custom-ico {
    font-family: 'customfonts';
    text-rendering: auto;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    transform: translate(0, 0);    
}

@mixin clear-pos {
    position: relative;
    top:auto;
    left:auto;
    transform: none;
}

@mixin regular-text {
    color:$text;
    line-height: 1.5;
    font-size: 1.5em;
}

@mixin small-lap {
    @media screen and ( min-width: 1025px ) and ( max-height: 767px ) {
        @content; 
    }
}

/*=====  End of Custom Mixins  ======*/


/*=============================
=            Align            =
=============================*/


@mixin centre($axis: "both"){
    position:absolute;
    @if $axis == "y"{
        top:50%;
        -webkit-transform: translateY(-50%);
        -moz-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
        -o-transform: translateY(-50%);
        transform: translateY(-50%);
    }
    @if $axis == "x"{
        left:50%;
        -webkit-transform: translateX(-50%);
        -moz-transform: translateX(-50%);
        -ms-transform: translateX(-50%);
        -o-transform: translateX(-50%);
        transform: translateX(-50%);
    }
    @if $axis == "both"{
        top:50%;
        left:50%;
        -webkit-transform: translate(-50%, -50%);
        -moz-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
        -o-transform: translate(-50%, -50%);
        transform: translate(-50%, -50%);
    }   
}

/*=====  End of Align  ======*/

/*=====================================
=            Color pallete            =
=====================================*/

@function palette($palette, $tone: 'base') {
    @return map-get(map-get($palettes, $palette), $tone);
}

/*=====  End of Color pallete  ======*/

